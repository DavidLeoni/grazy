{"version": 1,"name": "generic3D.cgfx","samplers":{"diffuse":{"MinFilter": 9985,"MagFilter": 9729}},"parameters":{"worldViewProjection":{"type": "float","rows": 4,"columns": 4},"pointSize":{"type": "float"},"constantColor":{"type": "float","columns": 4},"diffuse":{"type": "sampler2D"}},"techniques":{"constantColor3D":[{"parameters": ["worldViewProjection","constantColor"],"semantics": ["POSITION"],"states":{"DepthTestEnable": true,"DepthFunc": 515,"DepthMask": true,"CullFaceEnable": true,"CullFace": 1029,"BlendEnable": false},"programs": ["vp_constantColor_3d","fp_constantColor"]}],"vertexColor3D":[{"parameters": ["worldViewProjection"],"semantics": ["POSITION","COLOR"],"states":{"DepthTestEnable": true,"DepthFunc": 515,"DepthMask": true,"CullFaceEnable": true,"CullFace": 1029,"BlendEnable": false},"programs": ["vp_vertexColor_3d","fp_vertexColor"]}],"textured3D":[{"parameters": ["worldViewProjection","diffuse"],"semantics": ["POSITION","TEXCOORD0"],"states":{"DepthTestEnable": true,"DepthFunc": 515,"DepthMask": true,"CullFaceEnable": true,"CullFace": 1029,"BlendEnable": false},"programs": ["vp_textured_3d","fp_textured"]}],"vertexColorTextured3D":[{"parameters": ["worldViewProjection","diffuse"],"semantics": ["POSITION","COLOR","TEXCOORD0"],"states":{"DepthTestEnable": true,"DepthFunc": 515,"DepthMask": true,"CullFaceEnable": true,"CullFace": 1029,"BlendEnable": false},"programs": ["vp_vertexColorTextured_3d","fp_vertexColorTextured"]}],"desatureTextureConstantColor3D":[{"parameters": ["worldViewProjection","constantColor","diffuse"],"semantics": ["POSITION","TEXCOORD0"],"states":{"DepthTestEnable": true,"DepthFunc": 515,"DepthMask": true,"CullFaceEnable": true,"CullFace": 1029,"BlendEnable": false},"programs": ["vp_textured_3d","fp_desatureTextureConstantColor"]}],"pointConstantColor3D":[{"parameters": ["worldViewProjection","pointSize","constantColor"],"semantics": ["POSITION"],"states":{"DepthTestEnable": true,"DepthFunc": 515,"DepthMask": true,"CullFaceEnable": true,"CullFace": 1029,"BlendEnable": false},"programs": ["vp_point_constantColor_3d","fp_constantColor"]}]},"programs":{"fp_constantColor":{"type": "fragment","code": "#ifdef GL_ES\n#define TZ_LOWP lowp\nprecision mediump float;\nprecision mediump int;\n#else\n#define TZ_LOWP\n#endif\nuniform vec4 constantColor;void main()\n{gl_FragColor=constantColor;}"},"vp_point_constantColor_3d":{"type": "vertex","code": "#ifdef GL_ES\n#define TZ_LOWP lowp\nprecision mediump float;\nprecision mediump int;\n#else\n#define TZ_LOWP\n#endif\nattribute vec4 ATTR0;\nvec4 _OutPosition1;float _OutPointSize1;uniform vec4 worldViewProjection[4];uniform float pointSize;void main()\n{_OutPosition1=ATTR0.xxxx*worldViewProjection[0]+ATTR0.yyyy*worldViewProjection[1]+ATTR0.zzzz*worldViewProjection[2]+worldViewProjection[3];_OutPointSize1=pointSize;gl_PointSize=pointSize;gl_Position=_OutPosition1;}"},"fp_desatureTextureConstantColor":{"type": "fragment","code": "#ifdef GL_ES\n#define TZ_LOWP lowp\nprecision mediump float;\nprecision mediump int;\n#else\n#define TZ_LOWP\n#endif\nvarying vec4 tz_TexCoord[1];\nvec4 _ret_0;uniform vec4 constantColor;uniform sampler2D diffuse;void main()\n{vec4 _tex;float _greyscale;_tex=texture2D(diffuse,tz_TexCoord[0].xy);_greyscale=dot(_tex.xyz,vec3(3.00000012E-001,5.89999974E-001,1.09999999E-001));_tex.xyz=vec3(_greyscale,_greyscale,_greyscale);_ret_0=constantColor*_tex;gl_FragColor=_ret_0;}"},"vp_textured_3d":{"type": "vertex","code": "#ifdef GL_ES\n#define TZ_LOWP lowp\nprecision mediump float;\nprecision mediump int;\n#else\n#define TZ_LOWP\n#endif\nvarying vec4 tz_TexCoord[1];attribute vec4 ATTR0;attribute vec4 ATTR8;\nvec4 _OutPosition1;vec2 _OutTexCoord01;uniform vec4 worldViewProjection[4];void main()\n{_OutPosition1=ATTR0.xxxx*worldViewProjection[0]+ATTR0.yyyy*worldViewProjection[1]+ATTR0.zzzz*worldViewProjection[2]+worldViewProjection[3];_OutTexCoord01=ATTR8.xy;tz_TexCoord[0].xy=ATTR8.xy;gl_Position=_OutPosition1;}"},"fp_vertexColorTextured":{"type": "fragment","code": "#ifdef GL_ES\n#define TZ_LOWP lowp\nprecision mediump float;\nprecision mediump int;\n#else\n#define TZ_LOWP\n#endif\nvarying TZ_LOWP vec4 tz_Color;varying vec4 tz_TexCoord[1];\nvec4 _ret_0;vec4 _TMP0;uniform sampler2D diffuse;void main()\n{_TMP0=texture2D(diffuse,tz_TexCoord[0].xy);_ret_0=tz_Color*_TMP0;gl_FragColor=_ret_0;}"},"vp_vertexColorTextured_3d":{"type": "vertex","code": "#ifdef GL_ES\n#define TZ_LOWP lowp\nprecision mediump float;\nprecision mediump int;\n#else\n#define TZ_LOWP\n#endif\nvarying TZ_LOWP vec4 tz_Color;varying vec4 tz_TexCoord[1];attribute vec4 ATTR0;attribute vec4 ATTR3;attribute vec4 ATTR8;\nvec4 _OutColor01;vec4 _OutPosition1;vec2 _OutTexCoord01;uniform vec4 worldViewProjection[4];void main()\n{_OutPosition1=ATTR0.xxxx*worldViewProjection[0]+ATTR0.yyyy*worldViewProjection[1]+ATTR0.zzzz*worldViewProjection[2]+worldViewProjection[3];_OutColor01=ATTR3;_OutTexCoord01=ATTR8.xy;tz_TexCoord[0].xy=ATTR8.xy;gl_Position=_OutPosition1;tz_Color=ATTR3;}"},"fp_textured":{"type": "fragment","code": "#ifdef GL_ES\n#define TZ_LOWP lowp\nprecision mediump float;\nprecision mediump int;\n#else\n#define TZ_LOWP\n#endif\nvarying vec4 tz_TexCoord[1];\nvec4 _ret_0;uniform sampler2D diffuse;void main()\n{_ret_0=texture2D(diffuse,tz_TexCoord[0].xy);gl_FragColor=_ret_0;}"},"fp_vertexColor":{"type": "fragment","code": "#ifdef GL_ES\n#define TZ_LOWP lowp\nprecision mediump float;\nprecision mediump int;\n#else\n#define TZ_LOWP\n#endif\nvarying TZ_LOWP vec4 tz_Color;\nvoid main()\n{gl_FragColor=tz_Color;}"},"vp_vertexColor_3d":{"type": "vertex","code": "#ifdef GL_ES\n#define TZ_LOWP lowp\nprecision mediump float;\nprecision mediump int;\n#else\n#define TZ_LOWP\n#endif\nvarying TZ_LOWP vec4 tz_Color;attribute vec4 ATTR0;attribute vec4 ATTR3;\nvec4 _OutColor01;vec4 _OutPosition1;uniform vec4 worldViewProjection[4];void main()\n{_OutPosition1=ATTR0.xxxx*worldViewProjection[0]+ATTR0.yyyy*worldViewProjection[1]+ATTR0.zzzz*worldViewProjection[2]+worldViewProjection[3];_OutColor01=ATTR3;gl_Position=_OutPosition1;tz_Color=ATTR3;}"},"vp_constantColor_3d":{"type": "vertex","code": "#ifdef GL_ES\n#define TZ_LOWP lowp\nprecision mediump float;\nprecision mediump int;\n#else\n#define TZ_LOWP\n#endif\nattribute vec4 ATTR0;\nvec4 _OutPosition1;uniform vec4 worldViewProjection[4];void main()\n{_OutPosition1=ATTR0.xxxx*worldViewProjection[0]+ATTR0.yyyy*worldViewProjection[1]+ATTR0.zzzz*worldViewProjection[2]+worldViewProjection[3];gl_Position=_OutPosition1;}"}}}